import{i as f}from"./IButton-B4VrX7sp.js";import{d as g,n as c,o as r,c as n,a as m,f as _,w as h,b as p,u as y,t as w,g as b}from"./index-D1_ArJhU.js";import{s as k}from"./error-oUr4zJjZ.js";const B={key:0},C={key:1},N={key:0},$=g({__name:"WebBluetooth",setup(V){const v=c("bluetooth"in navigator),t=c(0);async function l(){await(async({bleService:e,bleCharacteristic:s})=>{try{if(!navigator.bluetooth)return;const a=await navigator.bluetooth.requestDevice({filters:[{services:[e]}]});a.addEventListener("gattserverdisconnected",()=>{t.value=0});const o=await(await(await a.gatt.connect()).getPrimaryService(e)).getCharacteristic(s);return await o.startNotifications(),o.addEventListener("characteristicvaluechanged",d=>{const i=d.target.value.getUint8(0);console.log(`${s} changed`,i),t.value=i}),o.readValue(),o}catch(a){alert(`Ошибка: ${k(a)}`)}})({bleService:"battery_service",bleCharacteristic:"battery_level"})}return(u,e)=>v.value?(r(),n("div",C,[e[1]||(e[1]=m("div",null,"Пока на паузе, не получается проверить работу",-1)),_(y(f),{onClick:l},{default:h(()=>e[0]||(e[0]=[p("scan")])),_:1}),t.value?(r(),n("div",N,"Уровень заряда устройства: "+w(t.value),1)):b("",!0)])):(r(),n("div",B,"Не поддерживается устройством"))}});export{$ as default};
